services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: mini_crm_app
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    env_file:
      - .env
    depends_on:
      - db
    networks: [mini_crm_net]

  nginx:
    image: nginx:1.25
    container_name: mini_crm_nginx
    depends_on:
      - app
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: [mini_crm_net]

  db:
    image: mysql:8
    container_name: mini_crm_db
    environment:
      MYSQL_DATABASE: mini_crm
      MYSQL_USER: app
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD --silent"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks: [mini_crm_net]

  node:
    image: node:20
    container_name: mini_crm_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    # однократный запуск команд через: docker compose run --rm node <cmd>
    networks: [mini_crm_net]

volumes:
  dbdata:

networks:
  mini_crm_net:
    driver: bridge
